plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'com.particle.life.app'
version = '1.0'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

application {
    mainClass = 'com.particle_life.app.Main'
    
    // Required for LWJGL on macOS
    applicationDefaultJvmArgs = [
        '-XstartOnFirstThread',
        '-Djava.awt.headless=false'
    ]
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

def lwjglVersion = '3.3.0'
def imguiVersion = '1.86.10'

// Determine natives based on OS
def os = org.gradle.internal.os.OperatingSystem.current()
def lwjglNatives = ''
def imguiNatives = ''

if (os.isMacOsX()) {
    def arch = System.getProperty("os.arch")
    if (arch == "aarch64") {
        lwjglNatives = "natives-macos-arm64"
        imguiNatives = "natives-macos"
    } else {
        lwjglNatives = "natives-macos"
        imguiNatives = "natives-macos"
    }
} else if (os.isLinux()) {
    lwjglNatives = "natives-linux"
    imguiNatives = "natives-linux"
} else if (os.isWindows()) {
    lwjglNatives = "natives-windows"
    imguiNatives = "natives-windows"
}

dependencies {
    // Core dependencies
    implementation "com.github.tom-mohr:particle-life:v0.5.1"
    implementation 'com.esotericsoftware.yamlbeans:yamlbeans:1.17'
    implementation 'com.moandjiezana.toml:toml4j:0.7.2'
    implementation 'org.apache.commons:commons-text:1.12.0'
    implementation 'org.joml:joml:1.10.1'
    
    // LWJGL
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
    ['', '-glfw', '-opengl', '-stb'].each { module ->
        implementation "org.lwjgl:lwjgl$module"
        if (lwjglNatives) {
            runtimeOnly "org.lwjgl:lwjgl$module::$lwjglNatives"
        }
    }
    
    // ImGui - use the binding and lwjgl3 implementation
    implementation "io.github.spair:imgui-java-binding:$imguiVersion"
    implementation "io.github.spair:imgui-java-lwjgl3:$imguiVersion"
    
    // Try to include natives manually
    if (os.isMacOsX()) {
        runtimeOnly "io.github.spair:imgui-java-natives-macos:$imguiVersion"
    }
}

// Shadow JAR configuration
shadowJar {
    archiveBaseName = 'particle-life-app-all'
    archiveVersion = ''
    manifest {
        attributes 'Main-Class': application.mainClass
    }
    mergeServiceFiles()
}

// Make 'fatJar' an alias for shadowJar
task fatJar {
    dependsOn shadowJar
}

// Run task
run {
    jvmArgs = applicationDefaultJvmArgs
}